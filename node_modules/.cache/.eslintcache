[{"C:\\Users\\82109\\Desktop\\jhj\\공부\\react_project\\src\\index.js":"1","C:\\Users\\82109\\Desktop\\jhj\\공부\\react_project\\src\\reportWebVitals.js":"2","C:\\Users\\82109\\Desktop\\jhj\\공부\\react_project\\src\\App.js":"3","C:\\Users\\82109\\Desktop\\jhj\\공부\\react_project\\src\\routes\\ListPage.js":"4","C:\\Users\\82109\\Desktop\\jhj\\공부\\react_project\\src\\routes\\ViewPage.js":"5","C:\\Users\\82109\\Desktop\\jhj\\공부\\react_project\\src\\routes\\WritePage.js":"6"},{"size":594,"mtime":1653221376929,"results":"7","hashOfConfig":"8"},{"size":362,"mtime":1652510719091,"results":"9","hashOfConfig":"8"},{"size":663,"mtime":1661053144228,"results":"10","hashOfConfig":"8"},{"size":3534,"mtime":1661057071368,"results":"11","hashOfConfig":"8"},{"size":3244,"mtime":1661057064742,"results":"12","hashOfConfig":"8"},{"size":4050,"mtime":1661057078750,"results":"13","hashOfConfig":"8"},{"filePath":"14","messages":"15","suppressedMessages":"16","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},"1blwwhq",{"filePath":"17","messages":"18","suppressedMessages":"19","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"20","messages":"21","suppressedMessages":"22","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"23","messages":"24","suppressedMessages":"25","errorCount":0,"fatalErrorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"26","messages":"27","suppressedMessages":"28","errorCount":0,"fatalErrorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"29"},{"filePath":"30","messages":"31","suppressedMessages":"32","errorCount":0,"fatalErrorCount":0,"warningCount":6,"fixableErrorCount":0,"fixableWarningCount":0,"source":"33"},"C:\\Users\\82109\\Desktop\\jhj\\공부\\react_project\\src\\index.js",[],[],"C:\\Users\\82109\\Desktop\\jhj\\공부\\react_project\\src\\reportWebVitals.js",[],[],"C:\\Users\\82109\\Desktop\\jhj\\공부\\react_project\\src\\App.js",[],[],"C:\\Users\\82109\\Desktop\\jhj\\공부\\react_project\\src\\routes\\ListPage.js",[],[],"C:\\Users\\82109\\Desktop\\jhj\\공부\\react_project\\src\\routes\\ViewPage.js",["34","35","36","37"],[],"//import './css/write-page.css';\r\nimport { useState } from 'react';\r\nimport { useParams } from 'react-router-dom';\r\nimport { Link } from 'react-router-dom';\r\n\r\nfunction ViewPage() {\r\n  const params = useParams();\r\n  const contentArray =  window.localStorage.getItem(\"contentArray\");\r\n  let [parsedData, setParsedData] = useState(JSON.parse(contentArray));\r\n\r\n  var thisCont = parsedData.filter(\r\n    (item) => item.key == params.id\r\n  );\r\n  //console.log('00',thisCont);\r\n  //const thisVal = thisCont[0].value;\r\n  const [thisVal, setThisValue] = useState(thisCont[0].value);\r\n  const [thisTit, setThisTitle] = useState(thisCont[0].title);\r\n\r\n  //02. 삭제하기\r\n  const actionDel = (e) => {\r\n    e.preventDefault();\r\n\r\n    parsedData = parsedData.filter(\r\n      (item) => item.key !== Number(params.id)\r\n    );\r\n\r\n    window.localStorage.setItem(\"contentArray\", JSON.stringify(parsedData));\r\n    //데이터는 그 다음에 set해주면 돼. 먼저 set 하면 오류나!!!\r\n    setParsedData(JSON.parse(window.localStorage.getItem(\"contentArray\")));\r\n    \r\n    window.location.href = '/';\r\n  }\r\n\r\n  //03. 수정하기\r\n  //03-01) textarea의 변화를 감지\r\n  const changeContent = (e) => {\r\n    e.preventDefault();\r\n    setThisValue(e.target.value);\r\n  }\r\n  //03-01) title의 변화를 감지\r\n  const changeTitle = (e) => {\r\n    e.preventDefault();\r\n    setThisTitle(e.target.value);\r\n  }\r\n\r\n  //03-01) 수정완료 버튼 클릭시, 수정된 값을 저장\r\n  const actionEdit = (e) => {\r\n    e.preventDefault();\r\n\r\n    //03-02) item.key == params.id 일때, 해당 item의 value를 textarea의 value로 수정\r\n    parsedData.map((item) => {\r\n        if(item.key == params.id){\r\n          item.value = thisVal;\r\n          item.title = thisTit;\r\n        }\r\n      }\r\n    );\r\n\r\n    //03-03) localStroage에 해당 사항을 저장해준다.\r\n    window.localStorage.setItem(\"contentArray\", JSON.stringify(parsedData));\r\n    //데이터는 그 다음에 set해주면 돼. 먼저 set 하면 오류나!!!\r\n    setParsedData(JSON.parse(window.localStorage.getItem(\"contentArray\")));\r\n\r\n    window.location.href =\"/\"\r\n\r\n  }\r\n  \r\n  return (\r\n    <div className=\"view-page\">\r\n      <div className='sub-inner'>\r\n        <h2 className='sub-title'>View</h2>\r\n        <form>\r\n          <input\r\n            type=\"text\"\r\n            onChange={changeTitle}\r\n            value={thisTit}\r\n            readOnly>\r\n          </input>\r\n          <textarea\r\n            placeholder=\"내용을 입력해주세요.\"\r\n            onChange={changeContent}\r\n            value={thisVal}\r\n            readOnly\r\n          >{thisVal}\r\n          </textarea>\r\n           \r\n          <div className='button-wrap-row'>\r\n            <Link to={'/write/'+params.id} \r\n              type=\"button\" \r\n              className='button button-m button-normal'\r\n            > 수정</Link>\r\n            <button \r\n            type='button'\r\n            className='button button-m button-normal'\r\n            onClick={actionDel}\r\n            > 삭제\r\n            </button>\r\n            <Link to=\"/\"\r\n            className='button button-m button-ok'\r\n            >목록으로</Link>\r\n          </div>\r\n\r\n        </form>\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default ViewPage;","C:\\Users\\82109\\Desktop\\jhj\\공부\\react_project\\src\\routes\\WritePage.js",["38","39","40","41","42","43"],[],"import '../css/write-page.css';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\n\nfunction WritePage() {\n  /* ## 1. write 구현하기 */\n  const storeageData = window.localStorage.getItem('contentArray');\n  const params = useParams();\n  let editTitle = '';\n  let editContent = '';\n\n  let arr;\n  if(storeageData == null ) {\n    arr = []\n  } else {\n    arr = JSON.parse(storeageData);\n  }\n\n  /* 수정하기의 경우, id의 값을 value로 불러오기 */\n  if(params['*'] === '') {\n\n  } else {\n    var thisCont = arr.filter(\n      (item) => item.key == params['*']\n    );\n    editTitle = thisCont[0].title;\n    editContent = thisCont[0].value;\n  }\n\n  //1. 글쓴것을 저장하는 useState  - title\n  const [title, setTitle] = useState(editTitle);\n  //2. 글쓴것을 배열로 저장할 useState\n  const [titletArray, setTitletArray] = useState(arr);\n  const writeTitle = (event) => setTitle(event.target.value);\n  \n  //1. 글쓴것을 저장하는 useState  - content\n  const [content, setContent] = useState(editContent);\n  //2. 글쓴것을 배열로 저장할 useState\n  const [contentArray, setContentArray] = useState(arr);\n  const writeContent = (event) => setContent(event.target.value);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    if(content === \"\") {\n      alert('글을 입력해주세요.');\n      return;\n    } else {\n      if(params['*'] === '') {\n        //3. 글쓴것을 object화 하기   \n        // 얘는 앞에 함수랑 상관없음 가져오는 값 content를 object로 변환해서 array로 저장시키기 위한 변수일뿐임 \n        let dataKey;\n        if( contentArray.length == 0 ) {\n          dataKey = 0;\n        } else {\n          dataKey = contentArray[0].key + 1;\n        }\n        const contentsData = { \n          title : title, \n          value : content, \n          key : dataKey \n        };\n        \n        //노마드코딩이 알려줌-> 블로그\n        //4. 배열에 전배열과 같이 넣기\n        //이거는 object화한contentsData \n        setContentArray(currentArray => [contentsData, ...currentArray]);\n\n        //5. 작성시, list page로 이동\n        //navigate('/');\n        window.location.href = `/view/${dataKey}`\n      }else {\n        //03-02) item.key == params.id 일때, 해당 item의 value를 textarea의 value로 수정\n        arr.map((item) => {\n            if(item.key == params['*']){\n              item.title = title;\n              item.value = content;\n            }\n          }\n        );\n        console.log(arr);\n\n        //03-03) localStroage에 해당 사항을 저장해준다.\n        window.localStorage.setItem(\"contentArray\", JSON.stringify(arr));\n        //데이터는 그 다음에 set해주면 돼. 먼저 set 하면 오류나!!!\n        //setParsedData(JSON.parse(window.localStorage.getItem(\"contentArray\")));\n\n        window.location.href = `/view/${params['*']}`\n      }\n    }\n  }\n  //5. logalstorage에 저장하기\n  window.localStorage.setItem(\"contentArray\", JSON.stringify(contentArray));\n\n\n  return (\n    <div className=\"write-page\">\n      <div className='sub-inner'>\n        <h2 className='sub-title'>Write</h2>\n        <form>\n          <input \n            type=\"text\"\n            value={title}\n            placeholder=\"제목을 입력해주세요\"\n            onChange={writeTitle}\n            \n          >\n          </input>\n          <textarea\n            value={content}\n            placeholder=\"내용을 입력해주세요.\"\n            onChange={writeContent}\n            \n          >            \n          </textarea>\n\n          <div className='button-wrap-row'>\n            <Link to=\"/\"\n            className='button button-m button-normal'\n            >목록으로</Link>\n            <button \n            type='button'\n            className='button button-m button-ok'\n            onClick={onSubmit}\n            >확인\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default WritePage;\n",{"ruleId":"44","severity":1,"message":"45","line":12,"column":24,"nodeType":"46","messageId":"47","endLine":12,"endColumn":26},{"ruleId":"48","severity":1,"message":"49","line":47,"column":9,"nodeType":"50","messageId":"51","endLine":47,"endColumn":19},{"ruleId":"52","severity":1,"message":"53","line":51,"column":27,"nodeType":"54","messageId":"55","endLine":51,"endColumn":29},{"ruleId":"44","severity":1,"message":"45","line":52,"column":21,"nodeType":"46","messageId":"47","endLine":52,"endColumn":23},{"ruleId":"44","severity":1,"message":"45","line":26,"column":26,"nodeType":"46","messageId":"47","endLine":26,"endColumn":28},{"ruleId":"48","severity":1,"message":"56","line":35,"column":10,"nodeType":"50","messageId":"51","endLine":35,"endColumn":21},{"ruleId":"48","severity":1,"message":"57","line":35,"column":23,"nodeType":"50","messageId":"51","endLine":35,"endColumn":37},{"ruleId":"44","severity":1,"message":"45","line":55,"column":33,"nodeType":"46","messageId":"47","endLine":55,"endColumn":35},{"ruleId":"52","severity":1,"message":"53","line":76,"column":24,"nodeType":"54","messageId":"55","endLine":76,"endColumn":26},{"ruleId":"44","severity":1,"message":"45","line":77,"column":25,"nodeType":"46","messageId":"47","endLine":77,"endColumn":27},"eqeqeq","Expected '===' and instead saw '=='.","BinaryExpression","unexpected","no-unused-vars","'actionEdit' is assigned a value but never used.","Identifier","unusedVar","array-callback-return","Array.prototype.map() expects a return value from arrow function.","ArrowFunctionExpression","expectedInside","'titletArray' is assigned a value but never used.","'setTitletArray' is assigned a value but never used."]