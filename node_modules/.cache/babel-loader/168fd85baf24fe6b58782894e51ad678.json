{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\82109\\\\Desktop\\\\jhj\\\\\\uACF5\\uBD80\\\\react_project\\\\src\\\\routes\\\\WritePage.js\",\n    _s = $RefreshSig$();\n\nimport '../css/write-page.css';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport { Link } from 'react-router-dom';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction WritePage() {\n  _s();\n\n  /* ## 1. write 구현하기 */\n  const storeageData = window.localStorage.getItem('contentArray');\n  const params = useParams();\n  let editTitle = '';\n  let editContent = '';\n  let arr;\n\n  if (storeageData == null) {\n    arr = [];\n  } else {\n    arr = JSON.parse(storeageData);\n  }\n  /* 수정하기의 경우, id의 값을 value로 불러오기 */\n\n\n  if (params['*'] === '') {} else {\n    var thisCont = arr.filter(item => item.key == params['*']);\n    editTitle = thisCont[0].title;\n    editContent = thisCont[0].value;\n  } //1. 글쓴것을 저장하는 useState  - title\n\n\n  const [title, setTitle] = useState(editTitle); //2. 글쓴것을 배열로 저장할 useState\n\n  const [titletArray, setTitletArray] = useState(arr);\n\n  const writeTitle = event => setTitle(event.target.value); //1. 글쓴것을 저장하는 useState  - content\n\n\n  const [content, setContent] = useState(editContent); //2. 글쓴것을 배열로 저장할 useState\n\n  const [contentArray, setContentArray] = useState(arr);\n\n  const writeContent = event => setContent(event.target.value);\n\n  const onSubmit = event => {\n    event.preventDefault();\n\n    if (content === \"\") {\n      alert('글을 입력해주세요.');\n      return;\n    } else {\n      if (params['*'] === '') {\n        //3. 글쓴것을 object화 하기   \n        // 얘는 앞에 함수랑 상관없음 가져오는 값 content를 object로 변환해서 array로 저장시키기 위한 변수일뿐임 \n        let dataKey;\n\n        if (contentArray.length == 0) {\n          dataKey = 0;\n        } else {\n          dataKey = contentArray[0].key + 1;\n        }\n\n        const contentsData = {\n          title: title,\n          value: content,\n          key: dataKey\n        }; //노마드코딩이 알려줌-> 블로그\n        //4. 배열에 전배열과 같이 넣기\n        //이거는 object화한contentsData \n\n        setContentArray(currentArray => [contentsData, ...currentArray]); //5. 작성시, list page로 이동\n        //navigate('/');\n\n        window.location.href = '/';\n      } else {\n        //03-02) item.key == params.id 일때, 해당 item의 value를 textarea의 value로 수정\n        arr.map(item => {\n          if (item.key == params['*']) {\n            item.title = title;\n            item.value = content;\n          }\n        });\n        console.log(arr); //03-03) localStroage에 해당 사항을 저장해준다.\n\n        window.localStorage.setItem(\"contentArray\", JSON.stringify(arr)); //데이터는 그 다음에 set해주면 돼. 먼저 set 하면 오류나!!!\n        //setParsedData(JSON.parse(window.localStorage.getItem(\"contentArray\")));\n\n        window.location.href = `/write/${params['*']}`;\n      }\n    }\n  }; //5. logalstorage에 저장하기\n\n\n  window.localStorage.setItem(\"contentArray\", JSON.stringify(contentArray));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"write-page\",\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"sub-inner\",\n      children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n        className: \"sub-title\",\n        children: \"\\uC791\\uC131\\uD558\\uAE30\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(\"form\", {\n        children: [/*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: title,\n          placeholder: \"\\uC81C\\uBAA9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694\",\n          onChange: writeTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"textarea\", {\n          value: content,\n          placeholder: \"\\uB0B4\\uC6A9\\uC744 \\uC785\\uB825\\uD574\\uC8FC\\uC138\\uC694.\",\n          onChange: writeContent\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"button-wrap\",\n          children: [/*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"button button-normal\",\n            children: \"\\uCDE8\\uC18C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Link, {\n            to: \"/\",\n            className: \"button button-normal\",\n            children: \"\\uBAA9\\uB85D\\uC73C\\uB85C\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n            type: \"button\",\n            className: \"button button-ok\",\n            onClick: onSubmit,\n            children: \"\\uD655\\uC778\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(WritePage, \"xn/+0MpXGMkoJjYvBdHMzisrfss=\", false, function () {\n  return [useParams];\n});\n\n_c = WritePage;\nexport default WritePage;\n\nvar _c;\n\n$RefreshReg$(_c, \"WritePage\");","map":{"version":3,"names":["useState","useParams","Link","WritePage","storeageData","window","localStorage","getItem","params","editTitle","editContent","arr","JSON","parse","thisCont","filter","item","key","title","value","setTitle","titletArray","setTitletArray","writeTitle","event","target","content","setContent","contentArray","setContentArray","writeContent","onSubmit","preventDefault","alert","dataKey","length","contentsData","currentArray","location","href","map","console","log","setItem","stringify"],"sources":["C:/Users/82109/Desktop/jhj/공부/react_project/src/routes/WritePage.js"],"sourcesContent":["import '../css/write-page.css';\nimport { useState } from 'react';\nimport { useParams } from 'react-router-dom';\nimport {Link} from 'react-router-dom';\n\n\nfunction WritePage() {\n  /* ## 1. write 구현하기 */\n  const storeageData = window.localStorage.getItem('contentArray');\n  const params = useParams();\n  let editTitle = '';\n  let editContent = '';\n\n  let arr;\n  if(storeageData == null ) {\n    arr = []\n  } else {\n    arr = JSON.parse(storeageData);\n  }\n\n  /* 수정하기의 경우, id의 값을 value로 불러오기 */\n  if(params['*'] === '') {\n\n  } else {\n    var thisCont = arr.filter(\n      (item) => item.key == params['*']\n    );\n    editTitle = thisCont[0].title;\n    editContent = thisCont[0].value;\n  }\n\n  //1. 글쓴것을 저장하는 useState  - title\n  const [title, setTitle] = useState(editTitle);\n  //2. 글쓴것을 배열로 저장할 useState\n  const [titletArray, setTitletArray] = useState(arr);\n  const writeTitle = (event) => setTitle(event.target.value);\n  \n  //1. 글쓴것을 저장하는 useState  - content\n  const [content, setContent] = useState(editContent);\n  //2. 글쓴것을 배열로 저장할 useState\n  const [contentArray, setContentArray] = useState(arr);\n  const writeContent = (event) => setContent(event.target.value);\n\n  const onSubmit = (event) => {\n    event.preventDefault();\n\n    if(content === \"\") {\n      alert('글을 입력해주세요.');\n      return;\n    } else {\n      if(params['*'] === '') {\n        //3. 글쓴것을 object화 하기   \n        // 얘는 앞에 함수랑 상관없음 가져오는 값 content를 object로 변환해서 array로 저장시키기 위한 변수일뿐임 \n        let dataKey;\n        if( contentArray.length == 0 ) {\n          dataKey = 0;\n        } else {\n          dataKey = contentArray[0].key + 1;\n        }\n        const contentsData = { \n          title : title, \n          value : content, \n          key : dataKey \n        };\n        \n        //노마드코딩이 알려줌-> 블로그\n        //4. 배열에 전배열과 같이 넣기\n        //이거는 object화한contentsData \n        setContentArray(currentArray => [contentsData, ...currentArray]);\n\n        //5. 작성시, list page로 이동\n        //navigate('/');\n        window.location.href = '/';\n      }else {\n        //03-02) item.key == params.id 일때, 해당 item의 value를 textarea의 value로 수정\n        arr.map((item) => {\n            if(item.key == params['*']){\n              item.title = title;\n              item.value = content;\n            }\n          }\n        );\n        console.log(arr);\n\n        //03-03) localStroage에 해당 사항을 저장해준다.\n        window.localStorage.setItem(\"contentArray\", JSON.stringify(arr));\n        //데이터는 그 다음에 set해주면 돼. 먼저 set 하면 오류나!!!\n        //setParsedData(JSON.parse(window.localStorage.getItem(\"contentArray\")));\n\n        window.location.href = `/write/${params['*']}`\n      }\n    }\n  }\n  //5. logalstorage에 저장하기\n  window.localStorage.setItem(\"contentArray\", JSON.stringify(contentArray));\n\n\n  return (\n    <div className=\"write-page\">\n      <div className='sub-inner'>\n        <h2 className='sub-title'>작성하기</h2>\n        <form>\n          <input \n            type=\"text\"\n            value={title}\n            placeholder=\"제목을 입력해주세요\"\n            onChange={writeTitle}\n            \n          >\n          </input>\n          <textarea\n            value={content}\n            placeholder=\"내용을 입력해주세요.\"\n            onChange={writeContent}\n            \n          >            \n          </textarea>\n\n          <div className='button-wrap'>\n            <button \n            type='button' \n            className='button button-normal'\n            >취소\n            </button>\n            <Link to=\"/\"\n            className='button button-normal'\n            >목록으로</Link>\n            <button \n            type='button'\n            className='button button-ok'\n            onClick={onSubmit}\n            >확인\n            </button>\n          </div>\n        </form>\n      </div>\n    </div>\n  );\n}\n\nexport default WritePage;\n"],"mappings":";;;AAAA,OAAO,uBAAP;AACA,SAASA,QAAT,QAAyB,OAAzB;AACA,SAASC,SAAT,QAA0B,kBAA1B;AACA,SAAQC,IAAR,QAAmB,kBAAnB;;;AAGA,SAASC,SAAT,GAAqB;EAAA;;EACnB;EACA,MAAMC,YAAY,GAAGC,MAAM,CAACC,YAAP,CAAoBC,OAApB,CAA4B,cAA5B,CAArB;EACA,MAAMC,MAAM,GAAGP,SAAS,EAAxB;EACA,IAAIQ,SAAS,GAAG,EAAhB;EACA,IAAIC,WAAW,GAAG,EAAlB;EAEA,IAAIC,GAAJ;;EACA,IAAGP,YAAY,IAAI,IAAnB,EAA0B;IACxBO,GAAG,GAAG,EAAN;EACD,CAFD,MAEO;IACLA,GAAG,GAAGC,IAAI,CAACC,KAAL,CAAWT,YAAX,CAAN;EACD;EAED;;;EACA,IAAGI,MAAM,CAAC,GAAD,CAAN,KAAgB,EAAnB,EAAuB,CAEtB,CAFD,MAEO;IACL,IAAIM,QAAQ,GAAGH,GAAG,CAACI,MAAJ,CACZC,IAAD,IAAUA,IAAI,CAACC,GAAL,IAAYT,MAAM,CAAC,GAAD,CADf,CAAf;IAGAC,SAAS,GAAGK,QAAQ,CAAC,CAAD,CAAR,CAAYI,KAAxB;IACAR,WAAW,GAAGI,QAAQ,CAAC,CAAD,CAAR,CAAYK,KAA1B;EACD,CAvBkB,CAyBnB;;;EACA,MAAM,CAACD,KAAD,EAAQE,QAAR,IAAoBpB,QAAQ,CAACS,SAAD,CAAlC,CA1BmB,CA2BnB;;EACA,MAAM,CAACY,WAAD,EAAcC,cAAd,IAAgCtB,QAAQ,CAACW,GAAD,CAA9C;;EACA,MAAMY,UAAU,GAAIC,KAAD,IAAWJ,QAAQ,CAACI,KAAK,CAACC,MAAN,CAAaN,KAAd,CAAtC,CA7BmB,CA+BnB;;;EACA,MAAM,CAACO,OAAD,EAAUC,UAAV,IAAwB3B,QAAQ,CAACU,WAAD,CAAtC,CAhCmB,CAiCnB;;EACA,MAAM,CAACkB,YAAD,EAAeC,eAAf,IAAkC7B,QAAQ,CAACW,GAAD,CAAhD;;EACA,MAAMmB,YAAY,GAAIN,KAAD,IAAWG,UAAU,CAACH,KAAK,CAACC,MAAN,CAAaN,KAAd,CAA1C;;EAEA,MAAMY,QAAQ,GAAIP,KAAD,IAAW;IAC1BA,KAAK,CAACQ,cAAN;;IAEA,IAAGN,OAAO,KAAK,EAAf,EAAmB;MACjBO,KAAK,CAAC,YAAD,CAAL;MACA;IACD,CAHD,MAGO;MACL,IAAGzB,MAAM,CAAC,GAAD,CAAN,KAAgB,EAAnB,EAAuB;QACrB;QACA;QACA,IAAI0B,OAAJ;;QACA,IAAIN,YAAY,CAACO,MAAb,IAAuB,CAA3B,EAA+B;UAC7BD,OAAO,GAAG,CAAV;QACD,CAFD,MAEO;UACLA,OAAO,GAAGN,YAAY,CAAC,CAAD,CAAZ,CAAgBX,GAAhB,GAAsB,CAAhC;QACD;;QACD,MAAMmB,YAAY,GAAG;UACnBlB,KAAK,EAAGA,KADW;UAEnBC,KAAK,EAAGO,OAFW;UAGnBT,GAAG,EAAGiB;QAHa,CAArB,CATqB,CAerB;QACA;QACA;;QACAL,eAAe,CAACQ,YAAY,IAAI,CAACD,YAAD,EAAe,GAAGC,YAAlB,CAAjB,CAAf,CAlBqB,CAoBrB;QACA;;QACAhC,MAAM,CAACiC,QAAP,CAAgBC,IAAhB,GAAuB,GAAvB;MACD,CAvBD,MAuBM;QACJ;QACA5B,GAAG,CAAC6B,GAAJ,CAASxB,IAAD,IAAU;UACd,IAAGA,IAAI,CAACC,GAAL,IAAYT,MAAM,CAAC,GAAD,CAArB,EAA2B;YACzBQ,IAAI,CAACE,KAAL,GAAaA,KAAb;YACAF,IAAI,CAACG,KAAL,GAAaO,OAAb;UACD;QACF,CALH;QAOAe,OAAO,CAACC,GAAR,CAAY/B,GAAZ,EATI,CAWJ;;QACAN,MAAM,CAACC,YAAP,CAAoBqC,OAApB,CAA4B,cAA5B,EAA4C/B,IAAI,CAACgC,SAAL,CAAejC,GAAf,CAA5C,EAZI,CAaJ;QACA;;QAEAN,MAAM,CAACiC,QAAP,CAAgBC,IAAhB,GAAwB,UAAS/B,MAAM,CAAC,GAAD,CAAM,EAA7C;MACD;IACF;EACF,CAjDD,CArCmB,CAuFnB;;;EACAH,MAAM,CAACC,YAAP,CAAoBqC,OAApB,CAA4B,cAA5B,EAA4C/B,IAAI,CAACgC,SAAL,CAAehB,YAAf,CAA5C;EAGA,oBACE;IAAK,SAAS,EAAC,YAAf;IAAA,uBACE;MAAK,SAAS,EAAC,WAAf;MAAA,wBACE;QAAI,SAAS,EAAC,WAAd;QAAA;MAAA;QAAA;QAAA;QAAA;MAAA,QADF,eAEE;QAAA,wBACE;UACE,IAAI,EAAC,MADP;UAEE,KAAK,EAAEV,KAFT;UAGE,WAAW,EAAC,yDAHd;UAIE,QAAQ,EAAEK;QAJZ;UAAA;UAAA;UAAA;QAAA,QADF,eASE;UACE,KAAK,EAAEG,OADT;UAEE,WAAW,EAAC,0DAFd;UAGE,QAAQ,EAAEI;QAHZ;UAAA;UAAA;UAAA;QAAA,QATF,eAiBE;UAAK,SAAS,EAAC,aAAf;UAAA,wBACE;YACA,IAAI,EAAC,QADL;YAEA,SAAS,EAAC,sBAFV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QADF,eAME,QAAC,IAAD;YAAM,EAAE,EAAC,GAAT;YACA,SAAS,EAAC,sBADV;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QANF,eASE;YACA,IAAI,EAAC,QADL;YAEA,SAAS,EAAC,kBAFV;YAGA,OAAO,EAAEC,QAHT;YAAA;UAAA;YAAA;YAAA;YAAA;UAAA,QATF;QAAA;UAAA;UAAA;UAAA;QAAA,QAjBF;MAAA;QAAA;QAAA;QAAA;MAAA,QAFF;IAAA;MAAA;MAAA;MAAA;IAAA;EADF;IAAA;IAAA;IAAA;EAAA,QADF;AAyCD;;GApIQ5B,S;UAGQF,S;;;KAHRE,S;AAsIT,eAAeA,SAAf"},"metadata":{},"sourceType":"module"}